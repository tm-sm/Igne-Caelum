[gd_scene load_steps=22 format=2]

[ext_resource path="res://entities/planes/IntorvAI.tscn" type="PackedScene" id=1]
[ext_resource path="res://entities/planes/InterzkiPlayer.tscn" type="PackedScene" id=2]
[ext_resource path="res://entities/planes/InterzkiAI.tscn" type="PackedScene" id=3]
[ext_resource path="res://shaders/SkyParallax.tres" type="Material" id=4]
[ext_resource path="res://ui/menus/InterfaceMarkers.tscn" type="PackedScene" id=5]
[ext_resource path="res://ui/GUI.tscn" type="PackedScene" id=6]
[ext_resource path="res://entities/PlayerCamera.tscn" type="PackedScene" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

onready var pause_menu = preload(\"res://ui/menus/PauseMenu.tscn\")
onready var game_over_menu = preload(\"res://ui/menus/GameOverMenu.tscn\")
onready var AI = $AI.get_children()
onready var player = $Player.get_child(0)
onready var stats = $GUI
onready var camera = $PlayerCamera
onready var markers = $InterfaceMarkers


var is_game_over = false


# Called when the node enters the scene tree for the first time.
func _ready():
	for ai in AI:
		ai.set_target(player)
		ai.initialize(self, Teams.group.b)
		markers.add_arrow_marker(ai, Color.red, 4)
		for ai2 in AI:
			if ai != ai2:
				ai.add_collision_exception_with(ai2)
	stats.initialize(player)
	camera.initialize(AI, player, markers)
	player.initialize(self, Teams.group.a)
	player.connect(\"destroyed\", self, \"game_over\")
	markers.add_arrow_marker(player, Color.green, 4)

func _input(event):
	if event.is_action_pressed(\"pause\"):
		var pause = pause_menu.instance()
		add_child(pause)
		get_tree().paused = true

func game_over():
	if not is_game_over:
		var game_over = game_over_menu.instance()
		add_child(game_over)
		is_game_over = true
"

[sub_resource type="PhysicsMaterial" id=16]

[sub_resource type="PhysicsMaterial" id=53]

[sub_resource type="Shader" id=37]
code = "shader_type canvas_item;

uniform float blue = 1.0;
uniform float red = 1.0;
uniform float green = 1.0;

void fragment() {
	COLOR = texture(TEXTURE, UV);
	COLOR.b = blue;
	COLOR.r = red;
	COLOR.g = green;
}
"

[sub_resource type="ShaderMaterial" id=52]
shader = SubResource( 37 )
shader_param/blue = 0.243
shader_param/red = 0.11
shader_param/green = 0.07

[sub_resource type="OpenSimplexNoise" id=41]

[sub_resource type="NoiseTexture" id=40]
width = 2042
height = 2042
seamless = true
noise = SubResource( 41 )

[sub_resource type="Shader" id=39]
code = "shader_type canvas_item;

uniform sampler2D texture2;
uniform sampler2D colorTexture;

uniform vec2 scroll = vec2(0.1, 0.1);
uniform vec2 scroll2 = vec2(0.1, 0.1);

void fragment() {
	float textureColor1 = texture(TEXTURE, UV + scroll * TIME).r;
	float textureColor2 = texture(texture2, UV + scroll2 * TIME).r;
	float energy = textureColor1 * textureColor2;
	vec4 color = texture(colorTexture, vec2(energy));
	COLOR = color;
}"

[sub_resource type="Gradient" id=46]
offsets = PoolRealArray( 0.364706, 0.576471, 0.623529 )
colors = PoolColorArray( 1, 1, 1, 0.0173794, 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=47]
gradient = SubResource( 46 )

[sub_resource type="OpenSimplexNoise" id=45]

[sub_resource type="NoiseTexture" id=51]
width = 325
height = 1
seamless = true
noise = SubResource( 45 )

[sub_resource type="ShaderMaterial" id=49]
shader = SubResource( 39 )
shader_param/scroll = Vector2( 0.002, 0.001 )
shader_param/scroll2 = Vector2( 0, 0 )
shader_param/texture2 = SubResource( 51 )
shader_param/colorTexture = SubResource( 47 )

[sub_resource type="NoiseTexture" id=50]
width = 2042
height = 2042
seamless = true
noise = SubResource( 41 )

[node name="Ambush" type="Node2D"]
script = SubResource( 1 )

[node name="Player" type="Node2D" parent="."]

[node name="Player" parent="Player" instance=ExtResource( 2 )]
position = Vector2( 2497, 791 )
physics_material_override = SubResource( 16 )
plane_color = Color( 0.388235, 0.509804, 0.219608, 1 )

[node name="AI" type="Node2D" parent="."]

[node name="IntorvAI" parent="AI" instance=ExtResource( 1 )]
position = Vector2( -21224, -815 )
physics_material_override = SubResource( 53 )
plane_color = Color( 0, 0, 0, 1 )

[node name="InterzkiAI" parent="AI" instance=ExtResource( 3 )]
position = Vector2( -17030, 13688 )
physics_material_override = SubResource( 16 )
plane_color = Color( 0, 0, 0, 1 )

[node name="InterzkiAI2" parent="AI" instance=ExtResource( 3 )]
position = Vector2( -842, -19779 )
physics_material_override = SubResource( 16 )
plane_color = Color( 0, 0, 0, 1 )

[node name="PlayerCamera" parent="." instance=ExtResource( 7 )]

[node name="SkyParallax" type="ParallaxBackground" parent="."]
scale = Vector2( 5, 5 )
transform = Transform2D( 5, 0, 0, 5, 0, 0 )
scroll_ignore_camera_zoom = true

[node name="Sky" type="ColorRect" parent="SkyParallax"]
material = SubResource( 52 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="FarawayClouds" type="ParallaxLayer" parent="SkyParallax"]
motion_scale = Vector2( 0.001, 0.001 )
motion_mirroring = Vector2( 2042, 2042 )

[node name="Sprite" type="Sprite" parent="SkyParallax/FarawayClouds"]
material = ExtResource( 4 )
texture = SubResource( 40 )
centered = false

[node name="NearClouds" type="ParallaxLayer" parent="SkyParallax"]
motion_scale = Vector2( 0.01, 0.01 )
motion_mirroring = Vector2( 2042, 2042 )

[node name="Sprite" type="Sprite" parent="SkyParallax/NearClouds"]
material = SubResource( 49 )
texture = SubResource( 50 )
centered = false

[node name="InterfaceMarkers" parent="." instance=ExtResource( 5 )]

[node name="GUI" parent="." instance=ExtResource( 6 )]
layer = 100
